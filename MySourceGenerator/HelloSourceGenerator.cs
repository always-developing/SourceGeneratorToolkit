using Microsoft.CodeAnalysis;
using SourceGeneratorToolkit;
using SourceGeneratorToolkit.Extensions;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MySourceGenerator
{

    [Generator]
    public class HelloSourceGenerator : ISourceGenerator
    {
        public void Execute(GeneratorExecutionContext context)
        {

            // Find the main method
            var mainMethod = context.Compilation.GetEntryPoint(context.CancellationToken);

            // Build up the source code
            string source = $@"// <auto-generated/>
namespace {mainMethod.ContainingNamespace.ToDisplayString()}
{{
    public static partial class {mainMethod.ContainingType.Name}
    {{
        static partial void HelloFrom(string name) =>
            Console.WriteLine($""Generator says: Hi from '{{name}}'"");
    }}
}}
";

            context.ConfigureGenerator()
               .WithFile(nameof(HelloSourceGenerator), file => file
                    .WithUsing("System")
                    .WithNamespace(mainMethod.ContainingNamespace.ToDisplayString(), ns => ns
                        .WithClass(mainMethod.ContainingType.Name, cls => cls
                            .AsPublic()
                            .AsPartial()
                            .AsStatic()
                            .WithMethod("HelloFrom", ebm => ebm
                                .AsStatic()
                                .AsPartial()
                                .WithReturnType(MethodReturnType.Void)
                                .WithParameter("string", "name")
                                .WithExpressionBody(@"Console.WriteLine($""Generator says: Hi from {name}"");")
                            )
                        )
    //                    .WithRawSource($@"
    //public static partial class {mainMethod.ContainingType.Name}
    //{{
    //    static partial void HelloFrom(string name) =>
    //        Console.WriteLine($""Generator says: Hi from 'abc123'"");
    //}}")
                    , false)
               ).Build();

               // .ToSource()
               // .ToHierarchy()
        }

        public void Initialize(GeneratorInitializationContext context)
        {
            // No initialization required for this one
        }
    }
}
